version: '3.8'

services:
  postgres_users_db:
    image: postgres
    build:
      context: ./postgresql_users_database
      dockerfile: Dockerfile
    container_name: postgres-users_db
    restart: always
    volumes:
      - ./postgresql_users_database/data:/var/lib/postgresql/data
      - ./postgresql_users_database/docker-entrypoint.sh:/docker-entrypoint-initdb.d/initdb.sh
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: main
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password123
    healthcheck:
      test: "pg_isready -U postgres"
      interval: 10s
      timeout: 5s
      retries: 5
  
  postgres_tasks_db:
    image: postgres
    build:
      context: ./postgresql_tasks_database
      dockerfile: Dockerfile
    container_name: postgres-tasks_db
    restart: always
    volumes:
      - ./postgresql_tasks_database/data:/var/lib/postgresql/data
      - ./postgresql_tasks_database/docker-entrypoint.sh:/docker-entrypoint-initdb.d/initdb.sh
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: tasks_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password123
    healthcheck:
      test: "pg_isready -U postgres"
      interval: 10s
      timeout: 5s
      retries: 5

  grpc-tasks-service:
    build:
      context: .
      dockerfile: task_manager.dockerfile
    container_name: task_manager_grpc_server
    environment:
      POSTGRES_DB: tasks_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password123
    depends_on:
      - postgres_tasks_db
    ports:
      - "51075:51075"
  
  rest-api:
    build:
      context: .
      dockerfile: backend_registration.dockerfile
    container_name: rest-api
    ports:
      - "5001:5001"
    environment:
      GRPC_TASKS_SERVER_ADDR: task_manager_grpc_server:51075
    depends_on:
      - postgres_users_db
      - grpc-tasks-service
  
  adminer:
      image: adminer
      restart: always
      depends_on:
        - postgres_users_db
        - postgres_tasks_db
      ports:
        - 8080:8080