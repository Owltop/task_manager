version: '3.8'

services:
  postgres_users_db:
    image: postgres
    build:
      context: ./postgresql_users_database
      dockerfile: Dockerfile
    container_name: postgres-users_db
    restart: always
    volumes:
      - ./postgresql_users_database/data:/var/lib/postgresql/data
      - ./postgresql_users_database/docker-entrypoint.sh:/docker-entrypoint-initdb.d/initdb.sh
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: main
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password123
    healthcheck:
      test: "pg_isready -U postgres"
      interval: 10s
      timeout: 5s
      retries: 5
  
  postgres_tasks_db:
    image: postgres
    build:
      context: ./postgresql_tasks_database
      dockerfile: Dockerfile
    container_name: postgres-tasks_db
    restart: always
    volumes:
      - ./postgresql_tasks_database/data:/var/lib/postgresql/data
      - ./postgresql_tasks_database/docker-entrypoint.sh:/docker-entrypoint-initdb.d/initdb.sh
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: tasks_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password123
    healthcheck:
      test: "pg_isready -U postgres"
      interval: 10s
      timeout: 5s
      retries: 5

  postgres_statistics_db:
    image: postgres
    build:
      context: ./postgresql_statistics_database
      dockerfile: Dockerfile
    container_name: postgres-statistics_db
    restart: always
    volumes:
      - ./postgresql_statistics_database/data:/var/lib/postgresql/data
      - ./postgresql_statistics_database/docker-entrypoint.sh:/docker-entrypoint-initdb.d/initdb.sh
    ports:
      - "5434:5432"
    environment:
      POSTGRES_DB: statistics_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password123
    healthcheck:
      test: "pg_isready -U postgres"
      interval: 10s
      timeout: 5s
      retries: 5

  grpc-tasks-service:
    build:
      context: .
      dockerfile: task_manager.dockerfile
    container_name: task_manager_grpc_server
    environment:
      POSTGRES_DB: tasks_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password123
    depends_on:
      - postgres_tasks_db
    ports:
      - "51075:51075"
  
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - '2181:2181'

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - '9092:9092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    
  stat_service:
    build: 
      context: .
      dockerfile: stat_service.dockerfile
    container_name: stat_service
    depends_on:
      - kafka
      - zookeeper
      - postgres_statistics_db
    ports:
      - "51076:51075"
  
  rest-api:
    build:
      context: .
      dockerfile: backend_registration.dockerfile
    container_name: rest-api
    ports:
      - "5001:5001"
    environment:
      GRPC_TASKS_SERVER_ADDR: task_manager_grpc_server:51075
      GRPC_TASKS_STATISTICS_SERVER_ADDR: stat_service:51075
    depends_on:
      - postgres_users_db
      - grpc-tasks-service
      - kafka
      - zookeeper
      - stat_service
  
  adminer:
      image: adminer
      restart: always
      depends_on:
        - postgres_users_db
        - postgres_tasks_db
      ports:
        - 8080:8080